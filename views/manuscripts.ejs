<%- include('layout', { body: `
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>
                    <i class="fas fa-file-pdf me-2"></i>
                    Manuscripts
                </h1>
                <button class="btn btn-primary" onclick="showUploadModal()">
                    <i class="fas fa-plus me-2"></i>
                    Upload Manuscript
                </button>
            </div>
        </div>
    </div>
    
    <!-- Filters -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <form method="GET" class="row g-3">
                        <div class="col-md-3">
                            <label for="search" class="form-label">Search</label>
                            <input type="text" class="form-control" id="search" name="search" 
                                   value="${filters.search || ''}" placeholder="Title or description...">
                        </div>
                        <div class="col-md-3">
                            <label for="author" class="form-label">Author</label>
                            <input type="text" class="form-control" id="author" name="author" 
                                   value="${filters.author || ''}" placeholder="Author name...">
                        </div>
                        <div class="col-md-3">
                            <label for="category" class="form-label">Category</label>
                            <select class="form-select" id="category" name="category">
                                <option value="">All Categories</option>
                                ${categories.map(cat => `
                                    <option value="${cat.category}" ${filters.category === cat.category ? 'selected' : ''}>
                                        ${cat.category}
                                    </option>
                                `).join('')}
                            </select>
                        </div>
                        <div class="col-md-3 d-flex align-items-end gap-2">
                            <button type="submit" class="btn btn-outline-primary">
                                <i class="fas fa-search me-2"></i>Filter
                            </button>
                            <a href="/admin/manuscripts" class="btn btn-outline-secondary">
                                <i class="fas fa-times me-2"></i>Clear
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Manuscripts Grid -->
    <div class="row">
        ${manuscripts.length === 0 ? `
            <div class="col-12">
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-file-pdf fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">No manuscripts found</h4>
                        <p class="text-muted">Upload your first manuscript to get started.</p>
                        <button class="btn btn-primary" onclick="showUploadModal()">
                            <i class="fas fa-plus me-2"></i>Upload Manuscript
                        </button>
                    </div>
                </div>
            </div>
        ` : manuscripts.map(manuscript => `
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card manuscript-card h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div class="file-icon">
                                <i class="fas fa-file-${getFileIcon(manuscript.file_type)} fa-2x text-primary"></i>
                            </div>
                            <div class="dropdown">
                                <button class="btn btn-outline-secondary btn-sm" type="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#" onclick="downloadFile('${manuscript.file_path}', '${manuscript.file_name}')">
                                        <i class="fas fa-download me-2"></i>Download
                                    </a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-danger" href="#" onclick="deleteManuscript(${manuscript.id})">
                                        <i class="fas fa-trash me-2"></i>Delete
                                    </a></li>
                                </ul>
                            </div>
                        </div>
                        
                        <h5 class="card-title">${manuscript.title}</h5>
                        <p class="card-text">
                            <strong>Author:</strong> ${manuscript.author}<br>
                            ${manuscript.category ? `<strong>Category:</strong> ${manuscript.category}<br>` : ''}
                            <strong>Size:</strong> ${formatFileSize(manuscript.file_size)}<br>
                            <strong>Uploaded:</strong> ${formatDate(manuscript.upload_date)}
                        </p>
                        ${manuscript.description ? `
                            <p class="card-text text-muted">
                                ${manuscript.description.length > 100 ? 
                                    manuscript.description.substring(0, 100) + '...' : 
                                    manuscript.description
                                }
                            </p>
                        ` : ''}
                    </div>
                </div>
            </div>
        `).join('')}
    </div>
</div>

<!-- Upload Modal -->
<div class="modal fade" id="uploadModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-file-pdf me-2"></i>
                    Upload Manuscript
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="uploadForm" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="title" class="form-label">Title *</label>
                            <input type="text" class="form-control" id="title" name="title" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="author" class="form-label">Author *</label>
                            <input type="text" class="form-control" id="author" name="author" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="category" class="form-label">Category</label>
                        <input type="text" class="form-control" id="category" name="category" 
                               placeholder="e.g., Fiction, Non-Fiction, Technical">
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="manuscriptFile" class="form-label">File (PDF, DOCX, EPUB) *</label>
                        <input type="file" class="form-control" id="manuscriptFile" name="manuscriptFile" 
                               accept=".pdf,.docx,.epub" required>
                        <div class="form-text">Maximum file size: 50MB</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="uploadManuscript()">
                    <i class="fas fa-upload me-2"></i>Upload
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .manuscript-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border-radius: 10px;
    }
    
    .manuscript-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 20px rgba(0,0,0,0.15);
    }
    
    .file-icon {
        margin-right: 10px;
    }
</style>

<script>
function getFileIcon(fileType) {
    if (fileType.includes('pdf')) return 'pdf';
    if (fileType.includes('word') || fileType.includes('docx')) return 'word';
    return 'alt';
}

function formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

function formatDate(dateString) {
    return new Date(dateString).toLocaleDateString();
}

function showUploadModal() {
    new bootstrap.Modal(document.getElementById('uploadModal')).show();
}

async function uploadManuscript() {
    const form = document.getElementById('uploadForm');
    const formData = new FormData(form);
    
    const submitBtn = document.querySelector('#uploadModal .btn-primary');
    const originalText = submitBtn.innerHTML;
    
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Uploading...';
    submitBtn.disabled = true;
    
    try {
        const response = await fetch('/admin/manuscripts/upload', {
            method: 'POST',
            body: formData
        });
        
        const data = await response.json();
        
        if (data.success) {
            alert('Manuscript uploaded successfully!');
            bootstrap.Modal.getInstance(document.getElementById('uploadModal')).hide();
            location.reload();
        } else {
            alert(data.message || 'Upload failed');
        }
    } catch (error) {
        console.error('Upload error:', error);
        alert('Upload failed. Please try again.');
    } finally {
        submitBtn.innerHTML = originalText;
        submitBtn.disabled = false;
    }
}

async function deleteManuscript(id) {
    if (!confirm('Are you sure you want to delete this manuscript? This action cannot be undone.')) {
        return;
    }
    
    try {
        const response = await fetch('/admin/manuscripts/' + id, {
            method: 'DELETE'
        });
        
        const data = await response.json();
        
        if (data.success) {
            alert('Manuscript deleted successfully!');
            location.reload();
        } else {
            alert(data.message || 'Delete failed');
        }
    } catch (error) {
        console.error('Delete error:', error);
        alert('Delete failed. Please try again.');
    }
}

function downloadFile(filePath, fileName) {
    // Create a temporary link to download the file
    const link = document.createElement('a');
    link.href = '/' + filePath.replace('public/', '');
    link.download = fileName;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}
</script>
` }) %>